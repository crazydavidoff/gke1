---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: job-delete-shutdown-pods
  namespace: kube-system
spec:
  schedule: "*/10 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: job-delete-shutdown-pods
          containers:
          - name: kubectl
            image: bitnami/kubectl
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - |
              for namespace in $(kubectl get namespaces --no-headers -o jsonpath='{.items[*].metadata.name}')
              do
                PODS_TO_REMOVE=$(kubectl get pods -n $namespace --no-headers 2>/dev/null | grep Shutdown | awk '{printf "%s ",$1}')
                if [ ! -z "$PODS_TO_REMOVE" ]; then kubectl delete pod -n $namespace $PODS_TO_REMOVE; fi
              done
          restartPolicy: OnFailure

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-delete-shutdown-pods
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: job-delete-shutdown-pods
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: job-delete-shutdown-pods
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: job-delete-shutdown-pods
subjects:
- kind: ServiceAccount
  name: job-delete-shutdown-pods
  namespace: kube-system
